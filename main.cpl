! Inclusioni

INCLUDE matrices_utils.h
INCLUDE initial_state_utils.h
INCLUDE sim_utils.h
INCLUDE output_utils.h

! Parametri Simulazione

REAL dt    = 0.001  ! [s] Passo temporale
REAL t_end = 5  ! [s] Tempo finale

INTEGER n_t = CEILING(t_end/dt + 1)

! Parametri Tensegrity 

REAL rho_b = 0.08 ! [kg/m] Massa per unità di lunghezza delle aste 
REAL k     = 5  ! [N/m]  Costante elastica dei cavi 
REAL sigma = 1  ! [-]    Damping 

REAL h = 0.1 ! [m] Altezza cella 
REAL r = 0.1 ! [m] Raggio cella 

REAL l_b = SQRT(h^2 + (2+SQRT(2))*r^2) ! [m] Lunghezza bielle

REAL I_0 = 1/3 * rho_b * l_b^3 ! [.] Momento di inerzia delle bielle

INTEGER n_N_i = 8  ! Numero nodi singola cella 
INTEGER n_B_i = 4  ! Numero bielle singola cella
INTEGER n_T_i = 12 ! Numero cavi singola cella

! Parametri fabric 

INTEGER nx = 20 ! Numero celle in direzione x 
INTEGER nz = 4 ! Numero celle in direzione z

n_C       = nx*nz             ! Numero totale celle
n_B       = 4*nx*nz           ! Numero totale bielle
n_T       = 12*(nx-1)*(nz-1) - 3*((nx-2)*(nz-1)+(nz-2)*(nx-1)) + 3*4 + 3*(nx-2) + 3*(nz-2) + 4*nx*nz
n_G       = 2*nx + 2*nz
n_N       = n_C * n_N_i + n_G ! Numero nodi
n_N_dof   = 3*n_N             ! Numero di coordinate di tutti i nodi
n_T_dof   = 3*n_T
n_q_tilde = 2*2*n_B           ! Numero stati sistema

alpha_1 = ATAN(SQRT(2)-1)                     ! Rotazione della singola cella
l_per   = (2*r) / (COS(alpha_1)+SIN(alpha_1)) ! Lunghezza vettore periodicità per una cella

! Definizione connettività bielle fabric 

ARRAY(n_B, 2) OF INTEGER B_con
B_con_comp(B_con, n_B, n_C)

! Definizione Connettività cavi fabric 

l_v_1 = SQRT(h^2 + (2-SQRT(2))*r^2) ! Lunghezza cavi "verticali" 
l_h_1 = SQRT(2)*r                   ! Lunghezza cavi orizzontali singola cella 

l_u_l = (2-SQRT(2))*l_h_1 ! Lunghezza cavi lato superiore lunghi
l_u_s = l_h_1 - l_u_l     ! Lunghezza cavi lato superiore corti

l_u_l_0 = l_u_l / 3 ! Scelta lunghezza iniziale cavi superiori lunghi come parametro del prestress

l_h_0 = (2*l_u_l_0*l_h_1)/(l_u_l + l_u_l_0)
l_u_s_0 = l_h_0 * l_u_s / l_h_1
l_i_0 = ((l_h_1/l_h_0-1)/r + 1/l_v_1)^(-1)

ARRAY(n_T, 2) OF INTEGER T_con
ARRAY(n_G, 3) OF INTEGER ghost_nodes
ARRAY(n_T) OF REAL l_0

T_comp(T_con, ghost_nodes, l_0, nx, nz, n_C, n_T, n_G, l_u_s_0, l_u_l_0, l_i_0)

! Costruzione vettore DOF iniziale

ARRAY(n_N_dof) OF REAL X_0
ARRAY(n_q_tilde) OF REAL q_0_tilde

X_0_comp(X_0, h, r, alpha_1, l_per, nx, nz, n_N, n_G, n_N_dof, ghost_nodes)
q_0_tilde_comp(q_0_tilde, X_0, B_con, l_b, n_q_tilde, n_B)

! Simulazione

ARRAY(n_t) OF REAL t_vec
ARRAY(n_q_tilde, n_t) OF REAL q_tilde_arr

simulate(t_vec, q_tilde_arr, n_t, n_q_tilde, dt, n_T, n_B, n_N, n_N_dof, n_T_dof, n_G, nx, nz, q_0_tilde, X_0, I_0, l_b, l_per, sigma, k, T_con, ghost_nodes, l_0)

! Output parametri fabric

ARRAY(10) OF INTEGER par_int_arr = (nx, nz, n_C, n_B, n_T, n_G, n_N, n_N_dof, n_T_dof, n_q_tilde)
ARRAY(2) OF REAL par_real_arr = (l_b, l_per)

vec_to_csv_int(par_int_arr, "output/par_int_arr.csv")
vec_to_csv_real(par_real_arr, "output/par_real_arr.csv")

! Output

mat_to_csv_int(B_con, "output/B_con.csv")
mat_to_csv_int(T_con, "output/T_con.csv")
mat_to_csv_int(ghost_nodes, "output/ghost_nodes.csv")
vec_to_csv_real(X_0, "output/X_0.csv")

mat_to_csv_real(q_tilde_arr, "output/q_tilde.csv")
vec_to_csv_real(t_vec, "output/t.csv")

! Check 

